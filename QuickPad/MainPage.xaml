<Page
    x:Class="QuickPad.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    xmlns:q="using:QuickPad"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    xmlns:dialog="using:QuickPad.Dialog"
    RequestedTheme="{x:Bind QSetting.Theme, Mode=OneWay}"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="FontFamilyComboBoxItem">
            <TextBlock Text="{Binding Name}" FontFamily="{Binding Name}" Margin="10,4,0,4" FontSize="16" />
        </DataTemplate>
    </Page.Resources>
    <Grid Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" x:Name="row0"/>
            <RowDefinition Height="Auto" x:Name="row1"/>
            <RowDefinition Height="*" x:Name="row2"/>
            <RowDefinition Height="Auto" x:Name="row3"/>
        </Grid.RowDefinitions>

        <controls:DropShadowPanel x:Name="Shadow1" Grid.RowSpan="1" VerticalAlignment="Top"
                                  Canvas.ZIndex="75"
                                  ShadowOpacity="0.3"
                                  OffsetX="0"
                                  OffsetY="2.54"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch"
                                  Grid.Row="1">

            <Frame x:Name="FrameTop" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" Visibility="Visible" VerticalAlignment="Top" Height="40" Grid.RowSpan="1"/>
        </controls:DropShadowPanel>

        <ToggleButton x:Name="CloseFocusMode" IsChecked="{x:Bind FocusModeSwitch, Mode=TwoWay}" Visibility="{x:Bind q:Converter.BoolToVisibility(FocusModeSwitch), Mode=OneWay}" HorizontalAlignment="Right" Content="°°°" VerticalAlignment="Top" Margin="0,10,10,0" Canvas.ZIndex="1500" VerticalContentAlignment="Center" FontSize="10" Width="35" Height="20" Windows10version1809:CornerRadius="2" Grid.Row="2">
            <ToolTipService.ToolTip>
                <TextBlock Text="Exit focus mode" x:Uid="ExitFocusMode"/>
            </ToolTipService.ToolTip>
        </ToggleButton>

        <CommandBar x:Name="CommandBar1" DefaultLabelPosition="Collapsed" Canvas.ZIndex="75" IsOpen="False" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top" Height="40" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" Margin="0,0,360,0">
            <AppBarButton x:Name="CmdNew" x:Uid="CmdNew" Label="New" Width="Auto" MinWidth="40" Click="CmdNew_Click">
                <ToolTipService.ToolTip>
                    <TextBlock Text="New" x:Uid="CmdNewTooltip"/>
                </ToolTipService.ToolTip>
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE7C3;"/>
                </AppBarButton.Icon>
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator
                          Modifiers="Control" 
                           Key="N" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
            <AppBarButton x:Name="CmdOpen" x:Uid="CmdOpen" Label="Open"  Width="Auto" MinWidth="40" Click="CmdOpen_Click">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Open (Ctrl+O)" x:Uid="CmdOpenTooltip"/>
                </ToolTipService.ToolTip>
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xF12B;"/>
                </AppBarButton.Icon>
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator
                          Modifiers="Control" 
                           Key="O" />
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
            <AppBarButton x:Name="CmdSave" x:Uid="CmdSave" Label="Save" Width="Auto" MinWidth="40" Icon="Save" Click="CmdSave_Click" LabelPosition="Collapsed">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Save (Ctrl+S)" x:Uid="CmdSaveTooltip"/>
                </ToolTipService.ToolTip>
                <AppBarButton.KeyboardAccelerators>
                    <KeyboardAccelerator 
                          Modifiers="Control" 
                           Key="S"/>
                </AppBarButton.KeyboardAccelerators>
            </AppBarButton>
            <AppBarSeparator/>
            <AppBarToggleButton IsChecked="{x:Bind IsItBold, Mode=OneWay}" x:Name="Bold" x:Uid="Bold"  Label="Bold"  Width="Auto" MinWidth="40" Click="Bold_Click" Icon="Bold" HorizontalAlignment="Stretch">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Bold (Ctrl+B)" x:Uid="BoldTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarToggleButton>
            <AppBarToggleButton IsChecked="{x:Bind IsItItalic, Mode=OneWay}" x:Name="Italic" x:Uid="Italic" Label="Italic" Width="Auto" MinWidth="40" Click="Italic_Click" Icon="Italic" HorizontalAlignment="Stretch">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Italic (Ctrl+I)" x:Uid="ItalicTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarToggleButton>
            <AppBarToggleButton IsChecked="{x:Bind IsItUnderline, Mode=OneWay}" x:Name="Underline" x:Uid="Underline" Label="Underline" Width="Auto" MinWidth="40" Click="Underline_Click" Icon="Underline" HorizontalAlignment="Stretch">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Underline (Ctrl+U)" x:Uid="UnderlineTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarToggleButton>
            <AppBarToggleButton IsChecked="{x:Bind IsItStrikethrough, Mode=OneWay}" x:Name="Strikethrough" x:Uid="Strikethrough" Label="Strikethrough"  Width="Auto" MinWidth="40" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowStrikethroughOption), Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Click="Strikethrough_Click">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Strikethrough" x:Uid="StrikethroughTooltip"/>
                </ToolTipService.ToolTip>
                <AppBarToggleButton.Icon>
                    <FontIcon Glyph="&#xA7A8;" FontFamily="Segoe UI"/>
                </AppBarToggleButton.Icon>
            </AppBarToggleButton>
            <AppBarToggleButton IsChecked="{x:Bind IsUsingBulletList, Mode=OneWay}" x:Name="BulletList" x:Uid="BulletList"  Label="Bullets"  Width="Auto" MinWidth="40" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowBullets), Mode=OneWay}" Icon="List" Click="BulletList_Click" HorizontalAlignment="Stretch">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Toggle Bullets" x:Uid="BulletListTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarToggleButton>
            <AppBarSeparator/>
            <AppBarButton x:Name="Left" x:Uid="Left" Label="Left" Width="Auto" MinWidth="40" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowAlignLeft), Mode=OneWay}" Click="Left_Click" Icon="AlignLeft">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Align left (Ctrl+L)" x:Uid="LeftTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
            <AppBarButton x:Name="Center" x:Uid="Center" Label="Center" Width="Auto" MinWidth="40" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowAlignCenter), Mode=OneWay}" Click="Center_Click" Icon="AlignCenter">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Align center (Ctrl+E)" x:Uid="CenterTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
            <AppBarButton x:Name="Right" x:Uid="Right" Label="Right"  Width="Auto" MinWidth="40" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowAlignRight), Mode=OneWay}" Click="Right_Click" Icon="AlignRight">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Align right (Ctrl+R)" x:Uid="RightTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
            <AppBarButton x:Name="Justify" x:Uid="Justify" Label="Justify"  Width="Auto" MinWidth="40" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowAlignJustify), Mode=OneWay}" Click="Justify_Click" Background="{x:Null}" >
                <ToolTipService.ToolTip>
                    <TextBlock Text="Justify text (Ctrl+J)" x:Uid="JustifyTooltip"/>
                </ToolTipService.ToolTip>
                <AppBarButton.Icon>
                    <BitmapIcon UriSource="/Assets/justify align.png"/>
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarSeparator x:Name="AlignSeparator" Visibility="{x:Bind q:Converter.HideIfNoAlignButtonShow(QSetting.ShowAlignLeft, QSetting.ShowAlignCenter, QSetting.ShowAlignRight, QSetting.ShowAlignJustify), Mode=OneWay}" />
            <AppBarButton x:Name="SizeUp" x:Uid="SizeUp" Label="Size Up" Width="Auto" MinWidth="40" Click="SizeUp_Click" Icon="FontIncrease">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Size Up" x:Uid="SizeUpTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
            <AppBarButton x:Name="SizeDown" x:Uid="SizeDown" Label="Size Down"  Width="Auto" MinWidth="40" Click="SizeDown_Click" Icon="FontDecrease">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Size Down" x:Uid="SizeDownTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
        </CommandBar>

        <CommandBar x:Name="CommandBar2" DefaultLabelPosition="Collapsed" Canvas.ZIndex="75" IsOpen="False" HorizontalAlignment="Right" Grid.Row="1" VerticalAlignment="Top" Height="40" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}">
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Name="CmdFocusMode" x:Uid="CmdFocusMode" Click="{x:Bind TurnOnFocusMode}" Icon="Caption" Label="Focus Mode" Width="Auto"/>
                <AppBarButton x:Name="CmdClassicMode" Click="{x:Bind TurnOnClassicMode}" Label="Classic Mode" x:Uid="CmdClassicMode" Width="Auto">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE8C5;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton x:Name="CmdShare" x:Uid="CmdShare" Label="Share"  Width="Auto" MinWidth="40" Icon="Share" Click="CmdShare_Click" >
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Share the file you are working on." x:Uid="CmdShareTooltip"/>
                    </ToolTipService.ToolTip>
                </AppBarButton>
                <AppBarButton x:Name="CmdReview" x:Uid="CmdReview" Icon="SolidStar" Label="Review" Click="CmdReview_Click" Width="Auto"/>
                <AppBarButton x:Name="CmdSettings" x:Uid="CmdSettings" Icon="Setting" Label="Settings" Width="Auto" Visibility="Visible" Click="CmdSettings_Click">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Settings" x:Uid="CmdSettingsTooltip"/>
                    </ToolTipService.ToolTip>
                </AppBarButton>
                <AppBarButton Icon="Cancel" Label="Exit" Width="Auto" Click="CmdExit_Click" x:Uid="CmdExit">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Exit the app" x:Uid="CmdExitTooltip"/>
                    </ToolTipService.ToolTip>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
            <AppBarButton x:Name="CmdUndo" IsEnabled="{x:Bind CanUndoText, Mode=OneWay}" Label="Undo" x:Uid="CmdUndo" Width="Auto" MinWidth="40" Icon="Undo" Visibility="Visible"  Click="CmdUndo_Click">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Undo (Ctrl+Z)" x:Uid="CmdUndoTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
            <AppBarButton x:Name="CmdRedo" IsEnabled="{x:Bind CanRedoText, Mode=OneWay}" Label="Redo" x:Uid="CmdRedo" Width="Auto" MinWidth="40" Icon="Redo" Visibility="Visible" Click="CmdRedo_Click">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Redo (Ctrl+Y)" x:Uid="CmdRedoTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
            <AppBarSeparator x:Name="ASep1"/>
            <AppBarToggleButton x:Name="CompactOverlay" x:Uid="CompactOverlay" IsChecked="{x:Bind CompactOverlaySwitch, Mode=TwoWay}" MinWidth="40" Width="Auto">
                <AppBarToggleButton.Icon>
                    <FontIcon Glyph="&#xE158;"/>
                </AppBarToggleButton.Icon>
                <AppBarToggleButton.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control, Shift" Key="O"/>
                </AppBarToggleButton.KeyboardAccelerators>
            </AppBarToggleButton>
            <AppBarButton x:Name="Copy" x:Uid="Copy" Label="Copy"  Width="Auto" MinWidth="40" Icon="Copy" Click="Copy_Click">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Copy (Ctrl+C)" x:Uid="CopyTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
            <AppBarButton x:Name="Paste" x:Uid="Paste" Label="Paste" Width="Auto" MinWidth="40" Icon="Paste" Click="Paste_Click">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Paste (Ctrl+V)" x:Uid="PasteTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
            <AppBarButton x:Name="Cut" x:Uid="Cut" Label="Cut" Width="Auto" MinWidth="40" Icon="Cut" Click="Cut_Click">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Cut (Ctrl+X)" x:Uid="CutTooltip"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
        </CommandBar>

        <winui:MenuBar x:Name="CommandBarClassic" Canvas.ZIndex="75" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Top" Height="40" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" Visibility="{x:Bind q:Converter.BoolToVisibility(ClassicModeSwitch), Mode=OneWay}">
            <winui:MenuBarItem Title="File" AccessKey="F" x:Uid="ClassicFile">
                <MenuFlyoutItem Text="New" AccessKey="N" Click="CmdNew_Click" x:Uid="ClassicFileNew">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE7C3;"/>
                    </MenuFlyoutItem.Icon>
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator
                          Modifiers="Control" 
                           Key="N" />
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Open" Click="CmdOpen_Click" AccessKey="O" x:Uid="ClassicFileOpen">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xF12B;"/>
                    </MenuFlyoutItem.Icon>
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator
                          Modifiers="Control" 
                           Key="O" />
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Save" Click="CmdSave_Click" AccessKey="S" x:Uid="ClassicFileSave">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Save"/>
                    </MenuFlyoutItem.Icon>
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator
                          Modifiers="Control" 
                           Key="S" />
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Save As..." Click="CmdSaveAs_Click" AccessKey="A" x:Uid="ClassicFileSaveAs">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Save"/>
                    </MenuFlyoutItem.Icon>
                    <MenuFlyoutItem.KeyboardAccelerators>
                        <KeyboardAccelerator
                          Modifiers="Control, Shift" 
                           Key="S" />
                    </MenuFlyoutItem.KeyboardAccelerators>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Share" Click="CmdShare_Click" AccessKey="H" x:Uid="ClassicFileShare">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Share"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Exit" Click="CmdExit_Click" AccessKey="X" x:Uid="ClassicFileExit">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE8BB;"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </winui:MenuBarItem>
            <winui:MenuBarItem Title="Edit" AccessKey="E" x:Uid="ClassicEdit">
                <MenuFlyoutItem Text="Undo" Click="CmdUndo_Click" AccessKey="U" x:Uid="ClassicEditUndo">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Undo"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Redo" AccessKey="R" Click="CmdRedo_Click" x:Uid="ClassicEditRedo">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Redo"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Cut" Click="Cut_Click" AccessKey="T" x:Uid="ClassicEditCut">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Cut"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Copy" Click="Copy_Click" AccessKey="C" x:Uid="ClassicEditCopy">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Copy"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Paste" Click="Paste_Click" AccessKey="P" x:Uid="ClassicEditPaste">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Paste"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </winui:MenuBarItem>
            <winui:MenuBarItem Title="Format" AccessKey="O" x:Uid="ClassicFormat">
                <ToggleMenuFlyoutItem Text="Word Wrap" IsChecked="{x:Bind QSetting.WordWrap, Mode=TwoWay}" x:Uid="WordWrap">
                    <ToggleMenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE751;" />
                    </ToggleMenuFlyoutItem.Icon>
                </ToggleMenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Bold" Click="Bold_Click" x:Uid="ClassicFormatBold">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Bold"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Italic" Click="Italic_Click" x:Uid="ClassicFormatItalic">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Italic"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Underline" Click="Underline_Click" x:Uid="ClassicFormatUnderline">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Underline"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Strikethrough" Click="Strikethrough_Click" x:Uid="ClassicFormatST" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowStrikethroughOption), Mode=OneWay}">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xA7A8;" FontFamily="Segoe UI"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Bullets" Click="BulletList_Click" x:Uid="ClassicFormatBullets" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowBullets), Mode=OneWay}">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Bullets"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Align leff" Click="Left_Click" x:Uid="ClassicFormatALeft" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowAlignLeft), Mode=OneWay}">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="AlignLeft"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Align center" Click="Center_Click" x:Uid="ClassicFormatACenter" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowAlignCenter), Mode=OneWay}">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="AlignCenter"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Align right" Click="Right_Click" x:Uid="ClassicFormatARight" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowAlignRight), Mode=OneWay}">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="AlignRight"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Align justify" Click="Justify_Click" x:Uid="ClassicFormatAJustify" Visibility="{x:Bind q:Converter.BoolToVisibility(QSetting.ShowAlignJustify), Mode=OneWay}">
                    <MenuFlyoutItem.Icon>
                        <BitmapIcon UriSource="/Assets/justify align.png"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator Visibility="{x:Bind q:Converter.HideIfNoAlignButtonShow(QSetting.ShowAlignLeft, QSetting.ShowAlignCenter, QSetting.ShowAlignRight, QSetting.ShowAlignJustify), Mode=OneWay}"/>
                <MenuFlyoutItem Text="Size up" Click="SizeUp_Click" x:Uid="ClassicFormatUp">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="FontIncrease"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Size down" Click="SizeDown_Click" x:Uid="ClassicFormatDown">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="FontDecrease"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator Visibility="Collapsed"/>
                <MenuFlyoutItem Text="Fonts..." Visibility="Collapsed" AccessKey="F" Click="ShowFontsDialog_Click" x:Uid="ClassicFormatFonts">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Font"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </winui:MenuBarItem>
            <winui:MenuBarItem Title="View" AccessKey="V" x:Uid="ClassicView">
                <ToggleMenuFlyoutItem Text="Back to default mode" AccessKey="D" IsChecked="{x:Bind ClassicModeSwitch, Mode=TwoWay}" x:Uid="ClassicViewBack">
                    <ToggleMenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Back"/>
                    </ToggleMenuFlyoutItem.Icon>
                </ToggleMenuFlyoutItem>
                <ToggleMenuFlyoutItem Text="Focus Mode" AccessKey="F" IsChecked="{x:Bind FocusModeSwitch, Mode=TwoWay}" x:Uid="ClassicViewFocus">
                    <ToggleMenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Caption"/>
                    </ToggleMenuFlyoutItem.Icon>
                </ToggleMenuFlyoutItem>
                <ToggleMenuFlyoutItem Text="Overlay mode" AccessKey="O" IsChecked="{x:Bind CompactOverlaySwitch, Mode=TwoWay}" x:Uid="ClassicViewOverlay">
                    <ToggleMenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE158;" />
                    </ToggleMenuFlyoutItem.Icon>
                </ToggleMenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <ToggleMenuFlyoutItem Text="Status Bar" AccessKey="S" IsChecked="{x:Bind QSetting.ShowStatusBar, Mode=TwoWay}" x:Uid="ClassicViewStatusBar">
                    <ToggleMenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE75B;" />
                    </ToggleMenuFlyoutItem.Icon>
                </ToggleMenuFlyoutItem>                
            </winui:MenuBarItem>
            <winui:MenuBarItem Title="Help" AccessKey="H" x:Uid="ClassicHelp">
                <MenuFlyoutItem Text="Settings" AccessKey="S" Click="CmdSettings_Click" x:Uid="CmdSettingsTooltip">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="Setting"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
                <MenuFlyoutSeparator/>
                <MenuFlyoutItem Text="Rate and Review" AccessKey="R" Click="CmdReview_Click" x:Uid="ClassicHelpRR">
                    <MenuFlyoutItem.Icon>
                        <SymbolIcon Symbol="SolidStar"/>
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </winui:MenuBarItem>
        </winui:MenuBar>

        <RichEditBox Grid.Row="2" 
                     x:Name="Text1" 
                     Drop="Text1_Drop" 
                     SelectionChanged="Text1_SelectionChanged" 
                     DragOver="Text1_DragOver" 
                     KeyDown="Text1_KeyDown" 
                     TextChanged="Text1_TextChanged" 
                     TextChanging="Text1_TextChanging"
                     GotFocus="Text1_GotFocus" 
                     BorderThickness="0,0,0,0" 
                     HorizontalAlignment="Stretch" 
                     VerticalAlignment="Stretch" 
                     TextWrapping="{x:Bind q:Converter.BoolToTextWrap(QSetting.WordWrap), Mode=OneWay}" 
                     IsSpellCheckEnabled="{x:Bind QSetting.SpellCheck, Mode=OneWay}" 
                     Style="{StaticResource RichEditBox}"
                     IsTapEnabled="True"
                     Tapped="Text1_Tapped">
            <RichEditBox.SelectionHighlightColorWhenNotFocused>
                <SolidColorBrush Color="{StaticResource SystemAccentColor}"/>
            </RichEditBox.SelectionHighlightColorWhenNotFocused>
        </RichEditBox>

        <ContentDialog x:Name="Settings" Windows10version1809:CornerRadius="4" Background="{ThemeResource SystemControlAcrylicElementBrush}" BorderBrush="{ThemeResource SystemControlForegroundBaseLowBrush}" Opened="Settings_Opened" Grid.Row="0" Grid.RowSpan="4">
            <ContentDialog.Resources>
                <!--Force all textblock to have margin-->
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="0,10,0,4"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="FontFamily" Value="Segoe UI"/>
                </Style>

            </ContentDialog.Resources>
            <Grid Width="450">
                <CommandBar x:Name="CmdSettingsBack" Canvas.ZIndex="100" HorizontalAlignment="Right" Grid.RowSpan="1" VerticalAlignment="Top" Height="40" Background="{x:Null}" Margin="0,0,0,0">
                    <AppBarButton x:Name="CmdBack" Windows10version1809:CornerRadius="2" Width="40" Icon="Clear" Click="CmdBack_Click"/>
                </CommandBar>
                <Pivot x:Name="SettingsPivot" x:Uid="SettingsPivot" Title="Settings">
                    <Pivot.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontSize="20" FontFamily="Segoe UI"/>
                        </DataTemplate>
                    </Pivot.HeaderTemplate>
                    <PivotItem Header="General" x:Name="SettingsTab1" x:Uid="SettingsTab1">
                        <ScrollViewer x:Name="SettingsTab1SV" Height="200">
                            <StackPanel>
                                <TextBlock Text="Launch Mode" x:Uid="GeneralLaunchMode"/>
                                <ComboBox x:Uid="GeneralLaunchModeCombobox" PlaceholderText="Default" SelectedIndex="{x:Bind QSetting.LaunchMode, Mode=TwoWay}" Windows10version1809:CornerRadius="2" x:Name="LaunchOptions" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" MinWidth="125" HorizontalAlignment="Left" BorderThickness="1">
                                    <ComboBoxItem Content="Default" Tag="Default" x:Uid="LaunchModeDefault" x:Name="LaunchModeDefault"/>
                                    <ComboBoxItem Content="On Top" Tag="On Top" x:Uid="LaunchModeOnTop" x:Name="LaunchModeOnTop"/>
                                    <ComboBoxItem Content="Focus Mode" Tag="Focus Mode" x:Uid="LaunchModeFocus" x:Name="LaunchModeFocus"/>
                                    <ComboBoxItem Content="Classic Mode" Tag="Classic Mode" x:Uid="LaunchModeClassic" x:Name="LaunchModeClassic"/>
                                </ComboBox>

                                <TextBlock x:Uid="GeneralDefaultType" Text="Default File Type"/>
                                <ComboBox PlaceholderText=".rtf" SelectedItem="{x:Bind QSetting.DefaultFileType, Mode=TwoWay}" Windows10version1809:CornerRadius="2" x:Name="DefaultFileType" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" Width="75" HorizontalAlignment="Left" BorderThickness="1,1,1,1">
                                    <x:String>.rtf</x:String>
                                    <x:String>.txt</x:String>
                                </ComboBox>
                                
                                <TextBlock x:Uid="AutoSaveSwitch" Text="Auto Save"/>
                                <ToggleSwitch x:Name="AutoSaveSwitch" x:Uid="GeneralToggleSwitch" OnContent="On" OffContent="Off" IsOn="{x:Bind QSetting.AutoSave, Mode=TwoWay}" HorizontalAlignment="Left"/>
                                
                                <TextBlock x:Uid="WordWrap" Text="Word Wrap"/>
                                <ToggleSwitch x:Uid="GeneralToggleSwitch" OnContent="On" OffContent="Off" IsOn="{x:Bind QSetting.WordWrap, Mode=TwoWay}"/>
                                
                                <TextBlock x:Uid="SpellCheck" Text="Spell Check"/>
                                <ToggleSwitch x:Name="SpellCheck" x:Uid="GeneralToggleSwitch" OnContent="On" OffContent="Off" IsOn="{x:Bind QSetting.SpellCheck, Mode=TwoWay}"/>

                                <TextBlock Text="Show Status Bar on Classic Mode" x:Uid="GeneralShowStatusOnClassic"/>
                                <ToggleSwitch IsOn="{x:Bind QSetting.ShowStatusBar, Mode=TwoWay}" x:Uid="GeneralToggleSwitch"/>

                            </StackPanel>
                        </ScrollViewer>
                    </PivotItem>
                    <PivotItem Header="Theme" x:Name="SettingsTab2" x:Uid="SettingsTab2">
                        <ScrollViewer Height="200">
                            <StackPanel>
                                <TextBlock x:Uid="AppTheme" Text="App Theme" TextWrapping="Wrap"/>
                                <RadioButton x:Name="Light" 
                                         Tag="Light" 
                                         x:Uid="Light" 
                                         Margin="0,10,0,4"
                                         Content="Light" 
                                         Click="{x:Bind SetTheme}" 
                                         IsChecked="{x:Bind q:Converter.ThemeToBool(QSetting.Theme, 'Light'), Mode=OneWay}" />
                                <RadioButton x:Name="Dark" 
                                         Tag="Dark" 
                                         x:Uid="Dark" 
                                         Content="Dark"
                                         Margin="0,10,0,4"
                                         Click="{x:Bind SetTheme}" 
                                         IsChecked="{x:Bind q:Converter.ThemeToBool(QSetting.Theme, 'Dark'), Mode=OneWay}"/>
                                <RadioButton x:Name="SystemDefault" 
                                         Tag="Default" 
                                         Margin="0,10,0,4"
                                         x:Uid="SystemDefault" 
                                         Content="System Default" 
                                         Click="{x:Bind SetTheme}" 
                                         IsChecked="{x:Bind q:Converter.ThemeToBool(QSetting.Theme, 'Default'), Mode=OneWay}" />
                            </StackPanel>
                        </ScrollViewer>
                    </PivotItem>
                    <PivotItem Header="Font" x:Name="SettingsTab3" x:Uid="SettingsTab3">
                        <ScrollViewer Height="200">
                            <StackPanel>
                                <TextBlock x:Uid="DefaultFont" Text="Default Font"/>
                                <ComboBox SelectedItem="{x:Bind QSetting.DefaultFont, Mode=TwoWay}" ItemsSource="{x:Bind AllFonts, Mode=OneWay}" Windows10version1809:CornerRadius="2" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" PlaceholderText="Segoe UI" MinWidth="169" BorderThickness="1"/>
                                <TextBlock x:Uid="DefaultFontSize" Text="Default Font Size" TextWrapping="Wrap"/>
                                <ComboBox SelectedItem="{x:Bind QSetting.DefaultFontSize, Mode=TwoWay}" Windows10version1809:CornerRadius="2" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" PlaceholderText="18" MinWidth="69" BorderThickness="1">
                                    <x:Int32>4</x:Int32>
                                    <x:Int32>6</x:Int32>
                                    <x:Int32>8</x:Int32>
                                    <x:Int32>10</x:Int32>
                                    <x:Int32>12</x:Int32>
                                    <x:Int32>14</x:Int32>
                                    <x:Int32>16</x:Int32>
                                    <x:Int32>18</x:Int32>
                                    <x:Int32>20</x:Int32>
                                    <x:Int32>22</x:Int32>
                                    <x:Int32>24</x:Int32>
                                    <x:Int32>26</x:Int32>
                                    <x:Int32>28</x:Int32>
                                    <x:Int32>36</x:Int32>
                                    <x:Int32>48</x:Int32>
                                    <x:Int32>72</x:Int32>
                                </ComboBox>
                                <TextBlock x:Uid="DefaultFontColor" Text="Default Font Color"/>
                                <ComboBox x:Name="DefaultFontColor" x:Uid="DefaultFontColorCombobox" ItemsSource="{x:Bind FontColorCollections}" SelectedIndex="{x:Bind SelectedDefaultFontColor, Mode=TwoWay}" Windows10version1809:CornerRadius="2" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" PlaceholderText="Black" Width="139" BorderThickness="1,1,1,1">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate x:DataType="q:FontColorItem">
                                            <StackPanel Orientation="Horizontal">
                                                <!--Default font color-->
                                                <Rectangle Width="14" Height="14" Fill="{ThemeResource ApplicationForegroundThemeBrush}" Visibility="{x:Bind q:Converter.IfStringMatchShow(TechnicalName, 'Default'), Mode=OneWay}" />
                                                <!--Other font color-->
                                                <Rectangle Width="14" Height="14" Fill="{x:Bind q:Converter.FromColorToBrush(ActualColor)}" Visibility="{x:Bind q:Converter.IfStringMatchHide(TechnicalName, 'Default'), Mode=OneWay}" />
                                                <TextBlock Text="{x:Bind ColorName}" Margin="5,0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </ScrollViewer>
                    </PivotItem>
                    <PivotItem Header="Toolbar" x:Name="SettingsTab4" x:Uid="SettingsTab4">
                        <ScrollViewer x:Name="SettingsTab2SV"  Height="200">
                            <StackPanel>
                                <ToggleSwitch x:Name="ShowStrikethrough" IsOn="{x:Bind QSetting.ShowStrikethroughOption, Mode=TwoWay}" x:Uid="ShowStrikethrough" OnContent="Show strikethrough option" OffContent="Hide strikethrough option" Margin="0,10,0,4"/>
                                <ToggleSwitch x:Name="ShowBullets" IsOn="{x:Bind QSetting.ShowBullets, Mode=TwoWay}" x:Uid="ShowBullets" OnContent="Show bullet list"  OffContent="Hide bullet list" Margin="0,10,0,4"/>
                                <ToggleSwitch x:Name="ShowAlignLeft" IsOn="{x:Bind QSetting.ShowAlignLeft, Mode=TwoWay}" x:Uid="ShowAlignLeft" OnContent="Show align left"  OffContent="Hide align left" Margin="0,10,0,4"/>
                                <ToggleSwitch x:Name="ShowAlignCenter" IsOn="{x:Bind QSetting.ShowAlignCenter, Mode=TwoWay}" x:Uid="ShowAlignCenter" OnContent="Show align center"  OffContent="Hide align center" Margin="0,10,0,4"/>
                                <ToggleSwitch x:Name="ShowAlignRight" IsOn="{x:Bind QSetting.ShowAlignRight, Mode=TwoWay}" x:Uid="ShowAlignRight" OnContent="Show align right"  OffContent="Hide align right" Margin="0,10,0,4"/>
                                <ToggleSwitch x:Name="ShowAlignJustify" IsOn="{x:Bind QSetting.ShowAlignJustify, Mode=TwoWay}" x:Uid="ShowAlignJustify" OnContent="Show align justify"  OffContent="Hide align justify" Margin="0,10,0,4"/>
                            </StackPanel>
                        </ScrollViewer>
                    </PivotItem>
                    <PivotItem Header="About" x:Name="SettingsTab5" x:Uid="SettingsTab5">
                        <ScrollViewer Height="200">
                            <StackPanel>
                                <TextBlock Text="Version number" x:Name="VersionNumber" HorizontalAlignment="Center"/>
                                <TextBlock Text="Developed by Yair Aichenbaum" x:Uid="DevelopedBy" HorizontalAlignment="Center"/>
                                <TextBlock Text="Icon design by James Arney" x:Uid="IconDesignBy" HorizontalAlignment="Center"/>
                                <HyperlinkButton Content="Send Feedback" x:Uid="SendFeedback" HorizontalAlignment="Center" NavigateUri="https://feedback.userreport.com/0a1a1038-4b33-4cc9-ad5e-ed71af43bb39/#ideas/popular"/>
                                <HyperlinkButton Content="Rate and review" x:Uid="RateAndReview" Click="CmdReview_Click" HorizontalAlignment="Center"/>
                                <HyperlinkButton Content="Contribute to the developer" x:Uid="Contribute" NavigateUri="http://paypal.me/yaichenbaum" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </ScrollViewer>
                    </PivotItem>
                </Pivot>
            </Grid>
        </ContentDialog>

        <dialog:FontAndFormat x:Name="FontAndFormat" 
                              Background="{ThemeResource SystemControlAcrylicElementBrush}" Grid.RowSpan="4"
                              AllFonts="{x:Bind AllFonts, Mode=OneWay}"/>

        <controls:DropShadowPanel x:Name="Shadow2" Margin="0,0,0,0" Grid.RowSpan="4" VerticalAlignment="Bottom"
                                  Canvas.ZIndex="10"
                                  ShadowOpacity="0.2"
                                  OffsetX="0"
                                  OffsetY="-1"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch">

            <Frame x:Name="FrameBottom" Content="" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" Visibility="Visible" VerticalAlignment="Top" Height="40" Grid.RowSpan="1" Margin="0,0,0,0"/>
        </controls:DropShadowPanel>

        <CommandBar x:Name="CommandBar3" Canvas.ZIndex="75" IsOpen="False" HorizontalAlignment="Right" Margin="0,0,0,0" Grid.Row="3" VerticalAlignment="Bottom" Height="40" FlowDirection="LeftToRight" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}">
            <CommandBar.Content>
                <Canvas Width="169" Height="40">
                    <Frame x:Name="FontBoxFrame" Width="167" Height="37" PointerMoved="FontSelected_PointerMoved" PointerExited="FontSelected_PointerExited" PointerPressed="Frame_PointerPressed"  Canvas.Left="1" Canvas.Top="1"  Canvas.ZIndex="100" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}"/>
                    <TextBlock x:Name="FontSelected" PointerMoved="FontSelected_PointerMoved" PointerExited="FontSelected_PointerExited" PointerPressed="Frame_PointerPressed" Text="Segoe UI" Canvas.Left="10" Canvas.Top="11" Canvas.ZIndex="100"/>
                    <TextBlock PointerMoved="FontSelected_PointerMoved" PointerExited="FontSelected_PointerExited" PointerPressed="Frame_PointerPressed" FontFamily="Segoe MDL2 Assets" Text="&#xE972;"  Canvas.Left="145" Canvas.Top="13" Canvas.ZIndex="100"/>
                    <ComboBox VerticalAlignment="Center" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" MinHeight="40" x:Name="Fonts" ItemsSource="{x:Bind AllFonts, Mode=OneWay}" PlaceholderText="Segoe UI" ItemTemplate="{StaticResource FontFamilyComboBoxItem}" SelectionChanged="Fonts_SelectionChanged" Width="169" HorizontalAlignment="Left" BorderThickness=".5" PlaceholderForeground="Black"/>
                </Canvas>
            </CommandBar.Content>
            <AppBarButton x:Name="TextColor" x:Uid="TextColor" Width="40" Icon="FontColor">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Font Color" x:Uid="TextColorTooltip"/>
                </ToolTipService.ToolTip>
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Name="Black" x:Uid="TextColorBlack" Tag="Black" Text="Black" Click="SetFormatColor" />
                        <MenuFlyoutItem x:Name="White" x:Uid="TextColorWhite" Tag="White" Text="White" Click="SetFormatColor" />
                        <MenuFlyoutItem x:Name="Yellow" x:Uid="TextColorYellow" Tag="LightYellow" Text="Yellow" Click="SetFormatColor" />
                        <MenuFlyoutItem x:Name="Blue" x:Uid="TextColorBlue" Tag="SkyBlue" Text="Blue" Click="SetFormatColor" />
                        <MenuFlyoutItem x:Name="Pink" x:Uid="TextColorPink" Tag="LightPink" Text="Pink" Click="SetFormatColor" />
                        <MenuFlyoutItem x:Name="Orange" x:Uid="TextColorOrange" Tag="LightSalmon" Text="Orange" Click="SetFormatColor" />
                        <MenuFlyoutItem x:Name="Green" x:Uid="TextColorGreen" Tag="LightGreen" Text="Green" Click="SetFormatColor" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton x:Name="Emoji" Width="40" Icon="Emoji2" Click="Emoji_Clicked" ToolTipService.ToolTip="Insert Emojis (Win + .)"/>
        </CommandBar>

        <controls:DropShadowPanel Grid.Row="3"
                                  VerticalAlignment="Bottom"
                                  Canvas.ZIndex="10"
                                  ShadowOpacity="0.2"
                                  OffsetX="0"
                                  OffsetY="-1"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch"
                                  Visibility="{x:Bind q:Converter.CanIShowStatusBar(ClassicModeSwitch, QSetting.ShowStatusBar), Mode=OneWay}">
            <Grid Canvas.ZIndex="74" HorizontalAlignment="Stretch" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" Grid.Row="3" VerticalAlignment="Stretch" x:Name="StatusBar" MinHeight="32">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--Save status-->
                <Grid Margin="5,0,2,0" Visibility="{x:Bind q:Converter.ShowIfItemIsNotNull(CurrentWorkingFile), Mode=OneWay}" Width="32" MaxWidth="32" x:Name="SaveIconStatus">
                    <FontIcon Glyph="&#xE74E;" FontSize="14">
                        <ToolTipService.ToolTip>
                            <StackPanel>
                                <TextBlock Text="{x:Bind CurrentWorkingFile.Path, Mode=OneWay}"/>
                            </StackPanel>
                        </ToolTipService.ToolTip>
                    </FontIcon>
                    <Ellipse Width="8" Height="8" Fill="Red" HorizontalAlignment="Left" Margin="4,0,0,8" Visibility="{x:Bind q:Converter.BoolToVisibility(Changed), Mode=OneWay}"/>
                </Grid>
                <!--Line and character count-->
                <TextBlock VerticalAlignment="Center" Padding="5,0,10,0" FontSize="14" Grid.Column="1" Margin="5,0,0,0">
                <Run Text="Line: " x:Uid="StatusLnCount"/><Run Text="{x:Bind CurrentLine, Mode=OneWay}"/><Run Text=","/>
                <Run Text="Column: " x:Uid="StatusColCount"/><Run Text="{x:Bind CurrentPosition, Mode=OneWay}"/>
                </TextBlock>
                <!--Selection info-->
                <TextBlock VerticalAlignment="Center" Padding="5,0" Grid.Column="3" FontSize="14" Visibility="{x:Bind q:Converter.ShowAfterCompareNumber(SelectionLength, q:IntCompare.More, 0), Mode=OneWay}">
                    <Run Text="Selection: " x:Uid="StatusSelCount"/><Run Text="{x:Bind SelectionLength, Mode=OneWay}"/>
                </TextBlock>
                <!--Bold, Italic, Underline status-->
                <FontIcon FontSize="14" Glyph="&#xE8DD;" Grid.Column="5" Visibility="{x:Bind IsItBold, Mode=OneWay}"/>
                <FontIcon FontSize="14" Glyph="&#xE8DB;" Grid.Column="6" Visibility="{x:Bind IsItItalic, Mode=OneWay}"/>
                <FontIcon FontSize="14" Glyph="&#xE8DC;" Grid.Column="7" Visibility="{x:Bind IsItUnderline, Mode=OneWay}"/>
                <FontIcon FontSize="14" Glyph="&#xA7A8;" FontFamily="Segoe UI" Grid.Column="7" Margin="0,0,0,2" Visibility="{x:Bind IsItStrikethrough, Mode=OneWay}"/>
            </Grid>
        </controls:DropShadowPanel>
        
        <Grid x:Name="Title" Canvas.ZIndex="100" Background="{ThemeResource SystemControlAcrylicWindowMediumHighBrush}" VerticalAlignment="Top" Height="33" HorizontalAlignment="Stretch">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{x:Bind CurrentFilename, Mode=OneWay}"
                           Style="{ThemeResource CaptionTextBlockStyle}"
                           VerticalAlignment="Center" Margin="10,0,0,0" FontSize="14"
                           Visibility="{x:Bind q:Converter.BoolToVisibilityInvert(CompactOverlaySwitch), Mode=OneWay}"/>
            </StackPanel>
        </Grid>
    </Grid>
</Page>

